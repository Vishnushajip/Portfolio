{
    "sourceFile": "lib/Styles/Nameprovider.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 30,
            "patches": [
                {
                    "date": 1741598412395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741598503056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,17 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n-/// Name Storage Notifier (Handles loading, saving, and clearing the name)\r\n+/// Name Storage Notifier (Only Loads Name)\r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n-  NameStorageNotifier() : super(null) {\r\n-    _loadName(); // Automatically load saved name on initialization\r\n-  }\r\n+  NameStorageNotifier() : super(null); // Initial state is null\r\n \r\n   /// Load name from SharedPreferences\r\n-  Future<void> _loadName() async {\r\n+  Future<void> loadName() async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     String? savedName = prefs.getString('saved_name');\r\n     state = savedName; // Update the provider state\r\n   }\r\n-\r\n-  /// Save name to SharedPreferences\r\n-  Future<void> saveName(String name) async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    await prefs.setString('saved_name', name);\r\n-    state = name; // Update Riverpod state\r\n-  }\r\n-\r\n-  /// Clear name from SharedPreferences\r\n-  Future<void> clearName() async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    await prefs.remove('saved_name');\r\n-    state = null; // Update Riverpod state\r\n-  }\r\n }\r\n \r\n /// Riverpod Provider for NameStorage\r\n final nameStorageProvider =\r\n"
                },
                {
                    "date": 1741598511284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,17 +4,15 @@\n /// Name Storage Notifier (Only Loads Name)\r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null); // Initial state is null\r\n \r\n-  /// Load name from SharedPreferences\r\n   Future<void> loadName() async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     String? savedName = prefs.getString('saved_name');\r\n-    state = savedName; // Update the provider state\r\n+    state = savedName; \r\n   }\r\n }\r\n \r\n-/// Riverpod Provider for NameStorage\r\n final nameStorageProvider =\r\n     StateNotifierProvider<NameStorageNotifier, String?>((ref) {\r\n   return NameStorageNotifier();\r\n });\r\n"
                },
                {
                    "date": 1741598657320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,13 @@\n-import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n-import 'package:shared_preferences/shared_preferences.dart';\r\n-\r\n-/// Name Storage Notifier (Only Loads Name)\r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n-  NameStorageNotifier() : super(null); // Initial state is null\r\n+  NameStorageNotifier() : super(null) {\r\n+    loadName(); // Automatically load name on creation\r\n+  }\r\n \r\n   Future<void> loadName() async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     String? savedName = prefs.getString('saved_name');\r\n-    state = savedName; \r\n+\r\n+    state = savedName ?? ''; // Ensure state is updated\r\n+    print(\"Loaded Name: $savedName\"); // Debug print\r\n   }\r\n }\r\n-\r\n-final nameStorageProvider =\r\n-    StateNotifierProvider<NameStorageNotifier, String?>((ref) {\r\n-  return NameStorageNotifier();\r\n-});\r\n"
                },
                {
                    "date": 1741598665720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,7 @@\n+import 'package:riverpod/riverpod.dart';\r\n+import 'package:shared_preferences/shared_preferences.dart';\r\n+\r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n     loadName(); // Automatically load name on creation\r\n   }\r\n"
                },
                {
                    "date": 1741598675582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,17 @@\n-import 'package:riverpod/riverpod.dart';\r\n+import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n-  NameStorageNotifier() : super(null) {\r\n-    loadName(); // Automatically load name on creation\r\n-  }\r\n+  NameStorageNotifier() : super(null);\r\n \r\n   Future<void> loadName() async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     String? savedName = prefs.getString('saved_name');\r\n-\r\n-    state = savedName ?? ''; // Ensure state is updated\r\n-    print(\"Loaded Name: $savedName\"); // Debug print\r\n+    state = savedName; \r\n   }\r\n }\r\n+\r\n+final nameStorageProvider =\r\n+    StateNotifierProvider<NameStorageNotifier, String?>((ref) {\r\n+  return NameStorageNotifier();\r\n+});\r\n"
                },
                {
                    "date": 1741598681597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,18 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n-  NameStorageNotifier() : super(null);\r\n+  NameStorageNotifier() : super(null) {\r\n+    loadName(); // Automatically load name on creation\r\n+  }\r\n \r\n   Future<void> loadName() async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     String? savedName = prefs.getString('saved_name');\r\n-    state = savedName; \r\n+\r\n+    state = savedName ?? ''; // Ensure state is updated\r\n+    print(\"Loaded Name: $savedName\"); // Debug print\r\n   }\r\n }\r\n \r\n final nameStorageProvider =\r\n"
                },
                {
                    "date": 1741598701911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n-    loadName(); // Automatically load name on creation\r\n+    loadName(); \r\n   }\r\n \r\n   Future<void> loadName() async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n"
                },
                {
                    "date": 1741598707719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n   Future<void> loadName() async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     String? savedName = prefs.getString('saved_name');\r\n \r\n-    state = savedName ?? ''; // Ensure state is updated\r\n-    print(\"Loaded Name: $savedName\"); // Debug print\r\n+    state = savedName ?? ''; \r\n+    print(\"Loaded Name: $savedName\");\r\n   }\r\n }\r\n \r\n final nameStorageProvider =\r\n"
                },
                {
                    "date": 1741606242870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,10 @@\n   NameStorageNotifier() : super(null) {\r\n     loadName(); \r\n   }\r\n \r\n-  Future<void> loadName() async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    String? savedName = prefs.getString('saved_name');\r\n-\r\n-    state = savedName ?? ''; \r\n-    print(\"Loaded Name: $savedName\");\r\n+  static Future<String?> getSavedName() async {\r\n+    return await _storage.read(key: 'saved_name');\r\n   }\r\n }\r\n \r\n final nameStorageProvider =\r\n"
                },
                {
                    "date": 1741606249149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n-import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n     loadName(); \r\n"
                },
                {
                    "date": 1741606272050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,16 @@\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n     loadName(); \r\n   }\r\n-\r\n+static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n+    aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n+    iOptions: IOSOptions(),\r\n+    webOptions: WebOptions(\r\n+      dbName: 'flutter_secure_storage',\r\n+      publicKey: 'key', // Required for Web\r\n+    ),\r\n+  );\r\n   static Future<String?> getSavedName() async {\r\n     return await _storage.read(key: 'saved_name');\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1741606281602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n+import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n-    loadName(); \r\n+    getSavedName(); \r\n   }\r\n static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n     iOptions: IOSOptions(),\r\n"
                },
                {
                    "date": 1741606298321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n     iOptions: IOSOptions(),\r\n     webOptions: WebOptions(\r\n       dbName: 'flutter_secure_storage',\r\n-      publicKey: 'key', // Required for Web\r\n+      publicKey: 'key', \r\n     ),\r\n   );\r\n   static Future<String?> getSavedName() async {\r\n     return await _storage.read(key: 'saved_name');\r\n"
                },
                {
                    "date": 1741606462987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,21 +2,31 @@\n import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n-    getSavedName(); \r\n+    _loadSavedName(); // ✅ Load name on initialization\r\n   }\r\n-static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n+\r\n+  static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n     iOptions: IOSOptions(),\r\n     webOptions: WebOptions(\r\n       dbName: 'flutter_secure_storage',\r\n-      publicKey: 'key', \r\n+      publicKey: 'key',\r\n     ),\r\n   );\r\n-  static Future<String?> getSavedName() async {\r\n-    return await _storage.read(key: 'saved_name');\r\n+\r\n+  /// ✅ Load name and update state\r\n+  Future<void> _loadSavedName() async {\r\n+    String? savedName = await _storage.read(key: 'saved_name');\r\n+    state = savedName; // ✅ Update state so UI reacts\r\n   }\r\n+\r\n+  /// ✅ Save name and update state\r\n+  Future<void> saveName(String name) async {\r\n+    await _storage.write(key: 'saved_name', value: name);\r\n+    state = name; // ✅ Update Riverpod state\r\n+  }\r\n }\r\n \r\n final nameStorageProvider =\r\n     StateNotifierProvider<NameStorageNotifier, String?>((ref) {\r\n"
                },
                {
                    "date": 1741606470998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n-    _loadSavedName(); // ✅ Load name on initialization\r\n+    _loadSavedName(); \r\n   }\r\n \r\n   static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n@@ -17,9 +17,9 @@\n \r\n   /// ✅ Load name and update state\r\n   Future<void> _loadSavedName() async {\r\n     String? savedName = await _storage.read(key: 'saved_name');\r\n-    state = savedName; // ✅ Update state so UI reacts\r\n+    state = savedName;\r\n   }\r\n \r\n   /// ✅ Save name and update state\r\n   Future<void> saveName(String name) async {\r\n"
                },
                {
                    "date": 1741606476168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,11 @@\n     String? savedName = await _storage.read(key: 'saved_name');\r\n     state = savedName;\r\n   }\r\n \r\n-  /// ✅ Save name and update state\r\n   Future<void> saveName(String name) async {\r\n     await _storage.write(key: 'saved_name', value: name);\r\n-    state = name; // ✅ Update Riverpod state\r\n+    state = name; \r\n   }\r\n }\r\n \r\n final nameStorageProvider =\r\n"
                },
                {
                    "date": 1741606492708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n       publicKey: 'key',\r\n     ),\r\n   );\r\n \r\n-  /// ✅ Load name and update state\r\n   Future<void> _loadSavedName() async {\r\n     String? savedName = await _storage.read(key: 'saved_name');\r\n     state = savedName;\r\n   }\r\n"
                },
                {
                    "date": 1741606824332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n     iOptions: IOSOptions(),\r\n     webOptions: WebOptions(\r\n       dbName: 'flutter_secure_storage',\r\n-      publicKey: 'key',\r\n     ),\r\n   );\r\n \r\n   Future<void> _loadSavedName() async {\r\n"
                },
                {
                    "date": 1741607123505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n     iOptions: IOSOptions(),\r\n     webOptions: WebOptions(\r\n       dbName: 'flutter_secure_storage',\r\n+      \r\n     ),\r\n   );\r\n \r\n   Future<void> _loadSavedName() async {\r\n"
                },
                {
                    "date": 1741607136827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n     iOptions: IOSOptions(),\r\n     webOptions: WebOptions(\r\n       dbName: 'flutter_secure_storage',\r\n-      \r\n+      storage: WebStorageType.localStorage,\r\n     ),\r\n   );\r\n \r\n   Future<void> _loadSavedName() async {\r\n"
                },
                {
                    "date": 1741607151418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,28 +2,31 @@\n import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n-    _loadSavedName(); \r\n+    loadSavedName(); // ✅ Load name when the app starts\r\n   }\r\n \r\n-  static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n+  static final FlutterSecureStorage _storage = FlutterSecureStorage(\r\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n     iOptions: IOSOptions(),\r\n     webOptions: WebOptions(\r\n-      dbName: 'flutter_secure_storage',\r\n-      storage: WebStorageType.localStorage,\r\n+      dbName: 'flutter_secure_storage', \r\n+      publicKey: null, // ✅ Remove encryption key for Web compatibility\r\n+      storage: WebStorageType.localStorage, // ✅ Use `localStorage` instead of IndexedDB\r\n     ),\r\n   );\r\n \r\n-  Future<void> _loadSavedName() async {\r\n+  /// ✅ Load name from secure storage and update state\r\n+  Future<void> loadSavedName() async {\r\n     String? savedName = await _storage.read(key: 'saved_name');\r\n-    state = savedName;\r\n+    state = savedName; // ✅ Ensures state updates properly\r\n   }\r\n \r\n+  /// ✅ Save name and update state\r\n   Future<void> saveName(String name) async {\r\n     await _storage.write(key: 'saved_name', value: name);\r\n-    state = name; \r\n+    state = name; // ✅ Update state so UI reacts\r\n   }\r\n }\r\n \r\n final nameStorageProvider =\r\n"
                },
                {
                    "date": 1741607159965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     iOptions: IOSOptions(),\r\n     webOptions: WebOptions(\r\n       dbName: 'flutter_secure_storage', \r\n       publicKey: null, // ✅ Remove encryption key for Web compatibility\r\n-      storage: WebStorageType.localStorage, // ✅ Use `localStorage` instead of IndexedDB\r\n+      storage: StorageType.localStorage, // ✅ Use `localStorage` instead of IndexedDB\r\n     ),\r\n   );\r\n \r\n   /// ✅ Load name from secure storage and update state\r\n"
                },
                {
                    "date": 1741607202126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,31 +2,28 @@\n import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n \r\n class NameStorageNotifier extends StateNotifier<String?> {\r\n   NameStorageNotifier() : super(null) {\r\n-    loadSavedName(); // ✅ Load name when the app starts\r\n+    _loadSavedName(); \r\n   }\r\n \r\n-  static final FlutterSecureStorage _storage = FlutterSecureStorage(\r\n+  static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n     aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n     iOptions: IOSOptions(),\r\n     webOptions: WebOptions(\r\n-      dbName: 'flutter_secure_storage', \r\n-      publicKey: null, // ✅ Remove encryption key for Web compatibility\r\n-      storage: StorageType.localStorage, // ✅ Use `localStorage` instead of IndexedDB\r\n+      dbName: 'flutter_secure_storage',\r\n+      storage: WebStorageType.localStorage,\r\n     ),\r\n   );\r\n \r\n-  /// ✅ Load name from secure storage and update state\r\n-  Future<void> loadSavedName() async {\r\n+  Future<void> _loadSavedName() async {\r\n     String? savedName = await _storage.read(key: 'saved_name');\r\n-    state = savedName; // ✅ Ensures state updates properly\r\n+    state = savedName;\r\n   }\r\n \r\n-  /// ✅ Save name and update state\r\n   Future<void> saveName(String name) async {\r\n     await _storage.write(key: 'saved_name', value: name);\r\n-    state = name; // ✅ Update state so UI reacts\r\n+    state = name; \r\n   }\r\n }\r\n \r\n final nameStorageProvider =\r\n"
                },
                {
                    "date": 1741624940782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,20 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n-import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n \r\n-class NameStorageNotifier extends StateNotifier<String?> {\r\n-  NameStorageNotifier() : super(null) {\r\n-    _loadSavedName(); \r\n+final nameProvider = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n+  return NameNotifier();\r\n+});\r\n+\r\n+class NameNotifier extends StateNotifier<String?> {\r\n+  NameNotifier() : super(null) {\r\n+    _loadName();\r\n   }\r\n \r\n-  static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n-    aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n-    iOptions: IOSOptions(),\r\n-    webOptions: WebOptions(\r\n-      dbName: 'flutter_secure_storage',\r\n-      storage: WebStorageType.localStorage,\r\n-    ),\r\n-  );\r\n-\r\n-  Future<void> _loadSavedName() async {\r\n-    String? savedName = await _storage.read(key: 'saved_name');\r\n-    state = savedName;\r\n+  Future<void> _loadName() async {\r\n+    state = await NameStorage.getSavedName();\r\n   }\r\n \r\n   Future<void> saveName(String name) async {\r\n-    await _storage.write(key: 'saved_name', value: name);\r\n-    state = name; \r\n+    await NameStorage.saveName(name);\r\n+    state = name; // Update Riverpod state\r\n   }\r\n }\r\n-\r\n-final nameStorageProvider =\r\n-    StateNotifierProvider<NameStorageNotifier, String?>((ref) {\r\n-  return NameStorageNotifier();\r\n-});\r\n"
                },
                {
                    "date": 1741625089883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n \r\n-final nameProvider = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n+final nameProviders = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n   return NameNotifier();\r\n });\r\n \r\n class NameNotifier extends StateNotifier<String?> {\r\n"
                },
                {
                    "date": 1741625101140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n \r\n+import 'Name_AlertLog.dart';\r\n+\r\n final nameProviders = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n   return NameNotifier();\r\n });\r\n \r\n"
                },
                {
                    "date": 1741625137052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n-\r\n import 'Name_AlertLog.dart';\r\n \r\n final nameProviders = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n   return NameNotifier();\r\n@@ -16,7 +15,7 @@\n   }\r\n \r\n   Future<void> saveName(String name) async {\r\n     await NameStorage.saveName(name);\r\n-    state = name; // Update Riverpod state\r\n+    state = name; \r\n   }\r\n }\r\n"
                },
                {
                    "date": 1741625252711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,30 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n-import 'Name_AlertLog.dart';\r\n+import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n-final nameProviders = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n+final nameProvider = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n   return NameNotifier();\r\n });\r\n \r\n class NameNotifier extends StateNotifier<String?> {\r\n   NameNotifier() : super(null) {\r\n     _loadName();\r\n   }\r\n \r\n+  /// Load the name from SharedPreferences on initialization\r\n   Future<void> _loadName() async {\r\n-    state = await NameStorage.getSavedName();\r\n+    state = await getName();\r\n   }\r\n \r\n+  /// Save name to SharedPreferences and update state\r\n   Future<void> saveName(String name) async {\r\n-    await NameStorage.saveName(name);\r\n-    state = name; \r\n+    final prefs = await SharedPreferences.getInstance();\r\n+    await prefs.setString('saved_name', name);\r\n+    state = name;\r\n   }\r\n+\r\n+  /// Fetch the saved name from SharedPreferences\r\n+  Future<String?> getName() async {\r\n+    final prefs = await SharedPreferences.getInstance();\r\n+    return prefs.getString('saved_name');\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1741625498217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n-final nameProvider = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n+final nameProviders = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n   return NameNotifier();\r\n });\r\n \r\n class NameNotifier extends StateNotifier<String?> {\r\n@@ -14,9 +14,8 @@\n   Future<void> _loadName() async {\r\n     state = await getName();\r\n   }\r\n \r\n-  /// Save name to SharedPreferences and update state\r\n   Future<void> saveName(String name) async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     await prefs.setString('saved_name', name);\r\n     state = name;\r\n"
                },
                {
                    "date": 1741625605421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,32 @@\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n-import 'package:shared_preferences/shared_preferences.dart';\r\n+import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n \r\n-final nameProviders = StateNotifierProvider<NameNotifier, String?>((ref) {\r\n-  return NameNotifier();\r\n-});\r\n-\r\n-class NameNotifier extends StateNotifier<String?> {\r\n-  NameNotifier() : super(null) {\r\n-    _loadName();\r\n+class NameStorageNotifier extends StateNotifier<String?> {\r\n+  NameStorageNotifier() : super(null) {\r\n+    _loadSavedName(); \r\n   }\r\n \r\n-  /// Load the name from SharedPreferences on initialization\r\n-  Future<void> _loadName() async {\r\n-    state = await getName();\r\n+  static const FlutterSecureStorage _storage = FlutterSecureStorage(\r\n+    aOptions: AndroidOptions(encryptedSharedPreferences: true),\r\n+    iOptions: IOSOptions(),\r\n+    webOptions: WebOptions(\r\n+      dbName: 'flutter_secure_storage',\r\n+      \r\n+    ),\r\n+  );\r\n+\r\n+  Future<void> _loadSavedName() async {\r\n+    String? savedName = await _storage.read(key: 'saved_name');\r\n+    state = savedName;\r\n   }\r\n \r\n   Future<void> saveName(String name) async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    await prefs.setString('saved_name', name);\r\n-    state = name;\r\n+    await _storage.write(key: 'saved_name', value: name);\r\n+    state = name; \r\n   }\r\n+}\r\n \r\n-  /// Fetch the saved name from SharedPreferences\r\n-  Future<String?> getName() async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    return prefs.getString('saved_name');\r\n-  }\r\n-}\r\n+final nameStorageProvider =\r\n+    StateNotifierProvider<NameStorageNotifier, String?>((ref) {\r\n+  return NameStorageNotifier();\r\n+});\r\n"
                }
            ],
            "date": 1741598412395,
            "name": "Commit-0",
            "content": "import 'package:flutter_riverpod/flutter_riverpod.dart';\r\nimport 'package:shared_preferences/shared_preferences.dart';\r\n\r\n/// Name Storage Notifier (Handles loading, saving, and clearing the name)\r\nclass NameStorageNotifier extends StateNotifier<String?> {\r\n  NameStorageNotifier() : super(null) {\r\n    _loadName(); // Automatically load saved name on initialization\r\n  }\r\n\r\n  /// Load name from SharedPreferences\r\n  Future<void> _loadName() async {\r\n    final prefs = await SharedPreferences.getInstance();\r\n    String? savedName = prefs.getString('saved_name');\r\n    state = savedName; // Update the provider state\r\n  }\r\n\r\n  /// Save name to SharedPreferences\r\n  Future<void> saveName(String name) async {\r\n    final prefs = await SharedPreferences.getInstance();\r\n    await prefs.setString('saved_name', name);\r\n    state = name; // Update Riverpod state\r\n  }\r\n\r\n  /// Clear name from SharedPreferences\r\n  Future<void> clearName() async {\r\n    final prefs = await SharedPreferences.getInstance();\r\n    await prefs.remove('saved_name');\r\n    state = null; // Update Riverpod state\r\n  }\r\n}\r\n\r\n/// Riverpod Provider for NameStorage\r\nfinal nameStorageProvider =\r\n    StateNotifierProvider<NameStorageNotifier, String?>((ref) {\r\n  return NameStorageNotifier();\r\n});\r\n"
        }
    ]
}