{
    "sourceFile": "lib/Styles/Name_AlertLog.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1741593669569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741593677991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n                   await FirebaseFirestore.instance\r\n                       .collection('logged_users')\r\n                       .add({'name': name, 'timestamp': FieldValue.serverTimestamp()});\r\n                 }\r\n-                Navigator.pop(context); // Close dialog\r\n+                Navigator.pop(context);\r\n               },\r\n               child: Text(\"Okay\"),\r\n             ),\r\n           ],\r\n"
                },
                {
                    "date": 1741593683544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n             ),\r\n           ),\r\n           actions: [\r\n             TextButton(\r\n-              onPressed: () => Navigator.pop(context), // Close dialog\r\n+              onPressed: () => Navigator.pop(context),\r\n               child: Text(\"Cancel\"),\r\n             ),\r\n             ElevatedButton(\r\n               onPressed: () async {\r\n"
                },
                {
                    "date": 1741593753779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,9 @@\n               border: OutlineInputBorder(),\r\n             ),\r\n           ),\r\n           actions: [\r\n-            TextButton(\r\n-              onPressed: () => Navigator.pop(context),\r\n-              child: Text(\"Cancel\"),\r\n-            ),\r\n+           \r\n             ElevatedButton(\r\n               onPressed: () async {\r\n                 String name = nameController.text.trim();\r\n                 if (name.isNotEmpty) {\r\n"
                },
                {
                    "date": 1741593966252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,87 @@\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n+import 'package:fluttertoast/fluttertoast.dart';\r\n \r\n-class AlertLog {\r\n-  static Future<void> show(BuildContext context) async {\r\n+/// Provider to manage the text field input state\r\n+final nameProvider = StateProvider<String>((ref) => '');\r\n+\r\n+/// Provider to manage whether the name is saved\r\n+final saveStateProvider = StateProvider<bool>((ref) => false);\r\n+\r\n+/// Firestore Database Provider\r\n+final firestoreProvider = Provider((ref) => FirebaseFirestore.instance);\r\n+\r\n+class AlertLogPage extends ConsumerWidget {\r\n+  @override\r\n+  Widget build(BuildContext context, WidgetRef ref) {\r\n+    return Scaffold(\r\n+      appBar: AppBar(title: Text(\"Riverpod Alert Log\")),\r\n+      body: Center(\r\n+        child: ElevatedButton(\r\n+          onPressed: () => _showAlertDialog(context, ref),\r\n+          child: Text(\"Log Name\"),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  /// Function to show AlertDialog\r\n+  void _showAlertDialog(BuildContext context, WidgetRef ref) {\r\n     TextEditingController nameController = TextEditingController();\r\n+    nameController.text = ref.read(nameProvider); // Initialize with stored value\r\n \r\n-    return showDialog(\r\n+    showDialog(\r\n       context: context,\r\n+      barrierDismissible: false, // Prevent closing without action\r\n       builder: (BuildContext context) {\r\n-        return AlertDialog(\r\n-          title: Text(\"Enter Your Name\"),\r\n-          content: TextField(\r\n-            controller: nameController,\r\n-            decoration: InputDecoration(\r\n-              hintText: \"Your Name\",\r\n-              border: OutlineInputBorder(),\r\n-            ),\r\n-          ),\r\n-          actions: [\r\n-           \r\n-            ElevatedButton(\r\n-              onPressed: () async {\r\n-                String name = nameController.text.trim();\r\n-                if (name.isNotEmpty) {\r\n-                  await FirebaseFirestore.instance\r\n-                      .collection('logged_users')\r\n-                      .add({'name': name, 'timestamp': FieldValue.serverTimestamp()});\r\n-                }\r\n-                Navigator.pop(context);\r\n-              },\r\n-              child: Text(\"Okay\"),\r\n-            ),\r\n-          ],\r\n+        return Consumer(\r\n+          builder: (context, ref, _) {\r\n+            final isSaved = ref.watch(saveStateProvider);\r\n+            return AlertDialog(\r\n+              title: Text(\"Enter Your Name\"),\r\n+              content: TextField(\r\n+                controller: nameController,\r\n+                onChanged: (value) => ref.read(nameProvider.notifier).state = value,\r\n+                decoration: InputDecoration(\r\n+                  hintText: \"Your Name\",\r\n+                  border: OutlineInputBorder(),\r\n+                ),\r\n+              ),\r\n+              actions: [\r\n+                ElevatedButton(\r\n+                  onPressed: () async {\r\n+                    String name = nameController.text.trim();\r\n+                    if (name.isNotEmpty && !isSaved) {\r\n+                      await ref.read(firestoreProvider).collection('logged_users').add({\r\n+                        'name': name,\r\n+                        'timestamp': FieldValue.serverTimestamp(),\r\n+                      });\r\n+\r\n+                      ref.read(saveStateProvider.notifier).state = true; // Mark as saved\r\n+\r\n+                      Fluttertoast.showToast(\r\n+                        msg: \"Saved successfully!\",\r\n+                        toastLength: Toast.LENGTH_SHORT,\r\n+                        gravity: ToastGravity.BOTTOM,\r\n+                      );\r\n+                    }\r\n+                  },\r\n+                  child: Text(isSaved ? \"Okay\" : \"Save\"),\r\n+                ),\r\n+                if (isSaved) // Show 'Okay' button only after saving\r\n+                  ElevatedButton(\r\n+                    onPressed: () {\r\n+                      Navigator.pop(context); // Close dialog\r\n+                      ref.read(saveStateProvider.notifier).state = false; // Reset state\r\n+                      ref.read(nameProvider.notifier).state = ''; // Clear name\r\n+                    },\r\n+                    child: Text(\"Close\"),\r\n+                  ),\r\n+              ],\r\n+            );\r\n+          },\r\n         );\r\n       },\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1741594000919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,25 +12,28 @@\n /// Firestore Database Provider\r\n final firestoreProvider = Provider((ref) => FirebaseFirestore.instance);\r\n \r\n class AlertLogPage extends ConsumerWidget {\r\n+  const AlertLogPage({super.key});\r\n+\r\n   @override\r\n   Widget build(BuildContext context, WidgetRef ref) {\r\n     return Scaffold(\r\n-      appBar: AppBar(title: Text(\"Riverpod Alert Log\")),\r\n+      appBar: AppBar(title: const Text(\"Riverpod Alert Log\")),\r\n       body: Center(\r\n         child: ElevatedButton(\r\n           onPressed: () => _showAlertDialog(context, ref),\r\n-          child: Text(\"Log Name\"),\r\n+          child: const Text(\"Log Name\"),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n   /// Function to show AlertDialog\r\n   void _showAlertDialog(BuildContext context, WidgetRef ref) {\r\n     TextEditingController nameController = TextEditingController();\r\n-    nameController.text = ref.read(nameProvider); // Initialize with stored value\r\n+    nameController.text =\r\n+        ref.read(nameProvider); // Initialize with stored value\r\n \r\n     showDialog(\r\n       context: context,\r\n       barrierDismissible: false, // Prevent closing without action\r\n@@ -38,13 +41,14 @@\n         return Consumer(\r\n           builder: (context, ref, _) {\r\n             final isSaved = ref.watch(saveStateProvider);\r\n             return AlertDialog(\r\n-              title: Text(\"Enter Your Name\"),\r\n+              title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                onChanged: (value) => ref.read(nameProvider.notifier).state = value,\r\n-                decoration: InputDecoration(\r\n+                onChanged: (value) =>\r\n+                    ref.read(nameProvider.notifier).state = value,\r\n+                decoration: const InputDecoration(\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(),\r\n                 ),\r\n               ),\r\n@@ -52,14 +56,18 @@\n                 ElevatedButton(\r\n                   onPressed: () async {\r\n                     String name = nameController.text.trim();\r\n                     if (name.isNotEmpty && !isSaved) {\r\n-                      await ref.read(firestoreProvider).collection('logged_users').add({\r\n+                      await ref\r\n+                          .read(firestoreProvider)\r\n+                          .collection('logged_users')\r\n+                          .add({\r\n                         'name': name,\r\n                         'timestamp': FieldValue.serverTimestamp(),\r\n                       });\r\n \r\n-                      ref.read(saveStateProvider.notifier).state = true; // Mark as saved\r\n+                      ref.read(saveStateProvider.notifier).state =\r\n+                          true; // Mark as saved\r\n \r\n                       Fluttertoast.showToast(\r\n                         msg: \"Saved successfully!\",\r\n                         toastLength: Toast.LENGTH_SHORT,\r\n@@ -72,12 +80,13 @@\n                 if (isSaved) // Show 'Okay' button only after saving\r\n                   ElevatedButton(\r\n                     onPressed: () {\r\n                       Navigator.pop(context); // Close dialog\r\n-                      ref.read(saveStateProvider.notifier).state = false; // Reset state\r\n+                      ref.read(saveStateProvider.notifier).state =\r\n+                          false; // Reset state\r\n                       ref.read(nameProvider.notifier).state = ''; // Clear name\r\n                     },\r\n-                    child: Text(\"Close\"),\r\n+                    child: const Text(\"Close\"),\r\n                   ),\r\n               ],\r\n             );\r\n           },\r\n"
                },
                {
                    "date": 1741594326481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,97 +1,144 @@\n import 'package:flutter/material.dart';\r\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n+import 'package:shared_preferences/shared_preferences.dart';\r\n import 'package:fluttertoast/fluttertoast.dart';\r\n \r\n-/// Provider to manage the text field input state\r\n+/// Provider to manage name state\r\n final nameProvider = StateProvider<String>((ref) => '');\r\n \r\n-/// Provider to manage whether the name is saved\r\n-final saveStateProvider = StateProvider<bool>((ref) => false);\r\n+/// Provider to track loading state\r\n+final isLoadingProvider = StateProvider<bool>((ref) => false);\r\n \r\n-/// Firestore Database Provider\r\n+/// Firestore Provider\r\n final firestoreProvider = Provider((ref) => FirebaseFirestore.instance);\r\n \r\n-class AlertLogPage extends ConsumerWidget {\r\n-  const AlertLogPage({super.key});\r\n+/// SharedPreferences Helper Class\r\n+class NameStorage {\r\n+  static Future<void> saveName(String name) async {\r\n+    final prefs = await SharedPreferences.getInstance();\r\n+    await prefs.setString('saved_name', name);\r\n+  }\r\n \r\n+  static Future<String?> getSavedName() async {\r\n+    final prefs = await SharedPreferences.getInstance();\r\n+    return prefs.getString('saved_name');\r\n+  }\r\n+}\r\n+\r\n+/// Main Page with Riverpod Implementation\r\n+class AlertLogPage extends ConsumerStatefulWidget {\r\n   @override\r\n-  Widget build(BuildContext context, WidgetRef ref) {\r\n-    return Scaffold(\r\n-      appBar: AppBar(title: const Text(\"Riverpod Alert Log\")),\r\n-      body: Center(\r\n-        child: ElevatedButton(\r\n-          onPressed: () => _showAlertDialog(context, ref),\r\n-          child: const Text(\"Log Name\"),\r\n-        ),\r\n-      ),\r\n-    );\r\n+  _AlertLogPageState createState() => _AlertLogPageState();\r\n+}\r\n+\r\n+class _AlertLogPageState extends ConsumerState<AlertLogPage> {\r\n+  @override\r\n+  void initState() {\r\n+    super.initState();\r\n+    _checkForSavedName();\r\n   }\r\n \r\n-  /// Function to show AlertDialog\r\n-  void _showAlertDialog(BuildContext context, WidgetRef ref) {\r\n+  /// Checks if a name is saved; if not, prompts the user\r\n+  Future<void> _checkForSavedName() async {\r\n+    String? savedName = await NameStorage.getSavedName();\r\n+    if (savedName == null || savedName.isEmpty) {\r\n+      Future.delayed(Duration.zero, () => _showAlertDialog(context));\r\n+    } else {\r\n+      ref.read(nameProvider.notifier).state = savedName;\r\n+    }\r\n+  }\r\n+\r\n+  /// Show AlertDialog for Name Input\r\n+  void _showAlertDialog(BuildContext context) {\r\n     TextEditingController nameController = TextEditingController();\r\n-    nameController.text =\r\n-        ref.read(nameProvider); // Initialize with stored value\r\n+    bool isSaving = false; // Local loading state\r\n \r\n     showDialog(\r\n       context: context,\r\n       barrierDismissible: false, // Prevent closing without action\r\n       builder: (BuildContext context) {\r\n-        return Consumer(\r\n-          builder: (context, ref, _) {\r\n-            final isSaved = ref.watch(saveStateProvider);\r\n+        return StatefulBuilder(\r\n+          builder: (context, setState) {\r\n             return AlertDialog(\r\n-              title: const Text(\"Enter Your Name\"),\r\n+              title: Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                onChanged: (value) =>\r\n-                    ref.read(nameProvider.notifier).state = value,\r\n-                decoration: const InputDecoration(\r\n+                decoration: InputDecoration(\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(),\r\n                 ),\r\n               ),\r\n               actions: [\r\n                 ElevatedButton(\r\n                   onPressed: () async {\r\n                     String name = nameController.text.trim();\r\n-                    if (name.isNotEmpty && !isSaved) {\r\n-                      await ref\r\n-                          .read(firestoreProvider)\r\n-                          .collection('logged_users')\r\n-                          .add({\r\n-                        'name': name,\r\n-                        'timestamp': FieldValue.serverTimestamp(),\r\n-                      });\r\n-\r\n-                      ref.read(saveStateProvider.notifier).state =\r\n-                          true; // Mark as saved\r\n-\r\n+                    if (name.isEmpty) {\r\n                       Fluttertoast.showToast(\r\n-                        msg: \"Saved successfully!\",\r\n+                        msg: \"Please enter your name\",\r\n                         toastLength: Toast.LENGTH_SHORT,\r\n                         gravity: ToastGravity.BOTTOM,\r\n                       );\r\n+                      return;\r\n                     }\r\n+\r\n+                    // Show loading indicator\r\n+                    setState(() => isSaving = true);\r\n+                    ref.read(isLoadingProvider.notifier).state = true;\r\n+\r\n+                    // Save name to Firestore\r\n+                    await ref.read(firestoreProvider).collection('logged_users').add({\r\n+                      'name': name,\r\n+                      'timestamp': FieldValue.serverTimestamp(),\r\n+                    });\r\n+\r\n+                    // Save name locally to SharedPreferences\r\n+                    await NameStorage.saveName(name);\r\n+\r\n+                    // Update the Riverpod state\r\n+                    ref.read(nameProvider.notifier).state = name;\r\n+                    ref.read(isLoadingProvider.notifier).state = false;\r\n+\r\n+                    // Show success message\r\n+                    Fluttertoast.showToast(\r\n+                      msg: \"Saved successfully!\",\r\n+                      toastLength: Toast.LENGTH_SHORT,\r\n+                      gravity: ToastGravity.BOTTOM,\r\n+                    );\r\n+\r\n+                    // Close the dialog\r\n+                    if (mounted) Navigator.pop(context);\r\n                   },\r\n-                  child: Text(isSaved ? \"Okay\" : \"Save\"),\r\n+                  child: isSaving\r\n+                      ? CircularProgressIndicator(color: Colors.white)\r\n+                      : Text(\"Okay\"),\r\n                 ),\r\n-                if (isSaved) // Show 'Okay' button only after saving\r\n-                  ElevatedButton(\r\n-                    onPressed: () {\r\n-                      Navigator.pop(context); // Close dialog\r\n-                      ref.read(saveStateProvider.notifier).state =\r\n-                          false; // Reset state\r\n-                      ref.read(nameProvider.notifier).state = ''; // Clear name\r\n-                    },\r\n-                    child: const Text(\"Close\"),\r\n-                  ),\r\n               ],\r\n             );\r\n           },\r\n         );\r\n       },\r\n     );\r\n   }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    final name = ref.watch(nameProvider);\r\n+    return Scaffold(\r\n+      appBar: AppBar(title: Text(\"Riverpod Alert Log\")),\r\n+      body: Center(\r\n+        child: Column(\r\n+          mainAxisAlignment: MainAxisAlignment.center,\r\n+          children: [\r\n+            Text(name.isEmpty ? \"No Name Saved\" : \"Saved Name: $name\"),\r\n+            SizedBox(height: 20),\r\n+            ElevatedButton(\r\n+              onPressed: () => _showAlertDialog(context),\r\n+              child: Text(\"Log Name\"),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1741594392245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n \r\n /// Firestore Provider\r\n final firestoreProvider = Provider((ref) => FirebaseFirestore.instance);\r\n \r\n-/// SharedPreferences Helper Class\r\n class NameStorage {\r\n   static Future<void> saveName(String name) async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     await prefs.setString('saved_name', name);\r\n"
                },
                {
                    "date": 1741594398323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,12 +6,10 @@\n \r\n /// Provider to manage name state\r\n final nameProvider = StateProvider<String>((ref) => '');\r\n \r\n-/// Provider to track loading state\r\n final isLoadingProvider = StateProvider<bool>((ref) => false);\r\n \r\n-/// Firestore Provider\r\n final firestoreProvider = Provider((ref) => FirebaseFirestore.instance);\r\n \r\n class NameStorage {\r\n   static Future<void> saveName(String name) async {\r\n"
                },
                {
                    "date": 1741594406109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:shared_preferences/shared_preferences.dart';\r\n import 'package:fluttertoast/fluttertoast.dart';\r\n \r\n-/// Provider to manage name state\r\n final nameProvider = StateProvider<String>((ref) => '');\r\n \r\n final isLoadingProvider = StateProvider<bool>((ref) => false);\r\n \r\n@@ -22,9 +21,8 @@\n     return prefs.getString('saved_name');\r\n   }\r\n }\r\n \r\n-/// Main Page with Riverpod Implementation\r\n class AlertLogPage extends ConsumerStatefulWidget {\r\n   @override\r\n   _AlertLogPageState createState() => _AlertLogPageState();\r\n }\r\n"
                },
                {
                    "date": 1741594413794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,8 @@\n     super.initState();\r\n     _checkForSavedName();\r\n   }\r\n \r\n-  /// Checks if a name is saved; if not, prompts the user\r\n   Future<void> _checkForSavedName() async {\r\n     String? savedName = await NameStorage.getSavedName();\r\n     if (savedName == null || savedName.isEmpty) {\r\n       Future.delayed(Duration.zero, () => _showAlertDialog(context));\r\n@@ -43,9 +42,8 @@\n       ref.read(nameProvider.notifier).state = savedName;\r\n     }\r\n   }\r\n \r\n-  /// Show AlertDialog for Name Input\r\n   void _showAlertDialog(BuildContext context) {\r\n     TextEditingController nameController = TextEditingController();\r\n     bool isSaving = false; // Local loading state\r\n \r\n"
                },
                {
                    "date": 1741594419868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,13 +44,13 @@\n   }\r\n \r\n   void _showAlertDialog(BuildContext context) {\r\n     TextEditingController nameController = TextEditingController();\r\n-    bool isSaving = false; // Local loading state\r\n+    bool isSaving = false; \r\n \r\n     showDialog(\r\n       context: context,\r\n-      barrierDismissible: false, // Prevent closing without action\r\n+      barrierDismissible: false,\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n           builder: (context, setState) {\r\n             return AlertDialog(\r\n"
                },
                {
                    "date": 1741594439308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,10 @@\n   }\r\n }\r\n \r\n class AlertLogPage extends ConsumerStatefulWidget {\r\n+  const AlertLogPage({super.key});\r\n+\r\n   @override\r\n   _AlertLogPageState createState() => _AlertLogPageState();\r\n }\r\n \r\n@@ -44,21 +46,21 @@\n   }\r\n \r\n   void _showAlertDialog(BuildContext context) {\r\n     TextEditingController nameController = TextEditingController();\r\n-    bool isSaving = false; \r\n+    bool isSaving = false;\r\n \r\n     showDialog(\r\n       context: context,\r\n       barrierDismissible: false,\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n           builder: (context, setState) {\r\n             return AlertDialog(\r\n-              title: Text(\"Enter Your Name\"),\r\n+              title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                decoration: InputDecoration(\r\n+                decoration: const InputDecoration(\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(),\r\n                 ),\r\n               ),\r\n@@ -79,9 +81,12 @@\n                     setState(() => isSaving = true);\r\n                     ref.read(isLoadingProvider.notifier).state = true;\r\n \r\n                     // Save name to Firestore\r\n-                    await ref.read(firestoreProvider).collection('logged_users').add({\r\n+                    await ref\r\n+                        .read(firestoreProvider)\r\n+                        .collection('logged_users')\r\n+                        .add({\r\n                       'name': name,\r\n                       'timestamp': FieldValue.serverTimestamp(),\r\n                     });\r\n \r\n@@ -102,10 +107,10 @@\n                     // Close the dialog\r\n                     if (mounted) Navigator.pop(context);\r\n                   },\r\n                   child: isSaving\r\n-                      ? CircularProgressIndicator(color: Colors.white)\r\n-                      : Text(\"Okay\"),\r\n+                      ? const CircularProgressIndicator(color: Colors.white)\r\n+                      : const Text(\"Okay\"),\r\n                 ),\r\n               ],\r\n             );\r\n           },\r\n@@ -117,18 +122,18 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     final name = ref.watch(nameProvider);\r\n     return Scaffold(\r\n-      appBar: AppBar(title: Text(\"Riverpod Alert Log\")),\r\n+      appBar: AppBar(title: const Text(\"Riverpod Alert Log\")),\r\n       body: Center(\r\n         child: Column(\r\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           children: [\r\n             Text(name.isEmpty ? \"No Name Saved\" : \"Saved Name: $name\"),\r\n-            SizedBox(height: 20),\r\n+            const SizedBox(height: 20),\r\n             ElevatedButton(\r\n               onPressed: () => _showAlertDialog(context),\r\n-              child: Text(\"Log Name\"),\r\n+              child: const Text(\"Log Name\"),\r\n             ),\r\n           ],\r\n         ),\r\n       ),\r\n"
                },
                {
                    "date": 1741594445876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,13 +92,11 @@\n \r\n                     // Save name locally to SharedPreferences\r\n                     await NameStorage.saveName(name);\r\n \r\n-                    // Update the Riverpod state\r\n                     ref.read(nameProvider.notifier).state = name;\r\n                     ref.read(isLoadingProvider.notifier).state = false;\r\n \r\n-                    // Show success message\r\n                     Fluttertoast.showToast(\r\n                       msg: \"Saved successfully!\",\r\n                       toastLength: Toast.LENGTH_SHORT,\r\n                       gravity: ToastGravity.BOTTOM,\r\n"
                },
                {
                    "date": 1741594451084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,18 +80,16 @@\n                     // Show loading indicator\r\n                     setState(() => isSaving = true);\r\n                     ref.read(isLoadingProvider.notifier).state = true;\r\n \r\n-                    // Save name to Firestore\r\n                     await ref\r\n                         .read(firestoreProvider)\r\n                         .collection('logged_users')\r\n                         .add({\r\n                       'name': name,\r\n                       'timestamp': FieldValue.serverTimestamp(),\r\n                     });\r\n \r\n-                    // Save name locally to SharedPreferences\r\n                     await NameStorage.saveName(name);\r\n \r\n                     ref.read(nameProvider.notifier).state = name;\r\n                     ref.read(isLoadingProvider.notifier).state = false;\r\n"
                },
                {
                    "date": 1741595394343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,14 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:shared_preferences/shared_preferences.dart';\r\n import 'package:fluttertoast/fluttertoast.dart';\r\n \r\n+/// Riverpod Providers\r\n final nameProvider = StateProvider<String>((ref) => '');\r\n-\r\n final isLoadingProvider = StateProvider<bool>((ref) => false);\r\n-\r\n final firestoreProvider = Provider((ref) => FirebaseFirestore.instance);\r\n \r\n+/// SharedPreferences Helper\r\n class NameStorage {\r\n   static Future<void> saveName(String name) async {\r\n     final prefs = await SharedPreferences.getInstance();\r\n     await prefs.setString('saved_name', name);\r\n@@ -21,38 +21,17 @@\n     return prefs.getString('saved_name');\r\n   }\r\n }\r\n \r\n-class AlertLogPage extends ConsumerStatefulWidget {\r\n-  const AlertLogPage({super.key});\r\n-\r\n-  @override\r\n-  _AlertLogPageState createState() => _AlertLogPageState();\r\n-}\r\n-\r\n-class _AlertLogPageState extends ConsumerState<AlertLogPage> {\r\n-  @override\r\n-  void initState() {\r\n-    super.initState();\r\n-    _checkForSavedName();\r\n-  }\r\n-\r\n-  Future<void> _checkForSavedName() async {\r\n-    String? savedName = await NameStorage.getSavedName();\r\n-    if (savedName == null || savedName.isEmpty) {\r\n-      Future.delayed(Duration.zero, () => _showAlertDialog(context));\r\n-    } else {\r\n-      ref.read(nameProvider.notifier).state = savedName;\r\n-    }\r\n-  }\r\n-\r\n-  void _showAlertDialog(BuildContext context) {\r\n+/// Reusable AlertLog Class\r\n+class AlertLog {\r\n+  static Future<void> show(BuildContext context, WidgetRef ref) async {\r\n     TextEditingController nameController = TextEditingController();\r\n     bool isSaving = false;\r\n \r\n     showDialog(\r\n       context: context,\r\n-      barrierDismissible: false,\r\n+      barrierDismissible: false, // Prevents closing the dialog without saving\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n           builder: (context, setState) {\r\n             return AlertDialog(\r\n@@ -76,9 +55,8 @@\n                       );\r\n                       return;\r\n                     }\r\n \r\n-                    // Show loading indicator\r\n                     setState(() => isSaving = true);\r\n                     ref.read(isLoadingProvider.notifier).state = true;\r\n \r\n                     await ref\r\n@@ -99,10 +77,9 @@\n                       toastLength: Toast.LENGTH_SHORT,\r\n                       gravity: ToastGravity.BOTTOM,\r\n                     );\r\n \r\n-                    // Close the dialog\r\n-                    if (mounted) Navigator.pop(context);\r\n+                    if (context.mounted) Navigator.pop(context);\r\n                   },\r\n                   child: isSaving\r\n                       ? const CircularProgressIndicator(color: Colors.white)\r\n                       : const Text(\"Okay\"),\r\n@@ -113,26 +90,5 @@\n         );\r\n       },\r\n     );\r\n   }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    final name = ref.watch(nameProvider);\r\n-    return Scaffold(\r\n-      appBar: AppBar(title: const Text(\"Riverpod Alert Log\")),\r\n-      body: Center(\r\n-        child: Column(\r\n-          mainAxisAlignment: MainAxisAlignment.center,\r\n-          children: [\r\n-            Text(name.isEmpty ? \"No Name Saved\" : \"Saved Name: $name\"),\r\n-            const SizedBox(height: 20),\r\n-            ElevatedButton(\r\n-              onPressed: () => _showAlertDialog(context),\r\n-              child: const Text(\"Log Name\"),\r\n-            ),\r\n-          ],\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n }\r\n"
                },
                {
                    "date": 1741595755559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n               content: TextField(\r\n                 controller: nameController,\r\n                 decoration: const InputDecoration(\r\n                   hintText: \"Your Name\",\r\n-                  border: OutlineInputBorder(),\r\n+                  border: OutlineInputBorder(borderSide: ),\r\n                 ),\r\n               ),\r\n               actions: [\r\n                 ElevatedButton(\r\n"
                },
                {
                    "date": 1741595801295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   static Future<void> show(BuildContext context, WidgetRef ref) async {\r\n     TextEditingController nameController = TextEditingController();\r\n     bool isSaving = false;\r\n \r\n-    showDialog(\r\n+    showDialog(barrierColor: Colors,\r\n       context: context,\r\n       barrierDismissible: false, // Prevents closing the dialog without saving\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n"
                },
                {
                    "date": 1741595821559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   static Future<void> show(BuildContext context, WidgetRef ref) async {\r\n     TextEditingController nameController = TextEditingController();\r\n     bool isSaving = false;\r\n \r\n-    showDialog(barrierColor: Colors,\r\n+    showDialog(barrierColor: Colors.b,\r\n       context: context,\r\n       barrierDismissible: false, // Prevents closing the dialog without saving\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n"
                },
                {
                    "date": 1741595875981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   static Future<void> show(BuildContext context, WidgetRef ref) async {\r\n     TextEditingController nameController = TextEditingController();\r\n     bool isSaving = false;\r\n \r\n-    showDialog(barrierColor: Colors.b,\r\n+    showDialog(barrierColor: Colors.black,\r\n       context: context,\r\n       barrierDismissible: false, // Prevents closing the dialog without saving\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n@@ -39,9 +39,9 @@\n               content: TextField(\r\n                 controller: nameController,\r\n                 decoration: const InputDecoration(\r\n                   hintText: \"Your Name\",\r\n-                  border: OutlineInputBorder(borderSide: ),\r\n+                  border: OutlineInputBorder(borderSide:BorderSide.none ),\r\n                 ),\r\n               ),\r\n               actions: [\r\n                 ElevatedButton(\r\n"
                },
                {
                    "date": 1741595881872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                decoration: const InputDecoration(\r\n+                decoration: const InputDecoration(bor\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(borderSide:BorderSide.none ),\r\n                 ),\r\n               ),\r\n"
                },
                {
                    "date": 1741595887844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                decoration: const InputDecoration(bor\r\n+                decoration: const InputDecoration(enabledBorder: Out,\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(borderSide:BorderSide.none ),\r\n                 ),\r\n               ),\r\n"
                },
                {
                    "date": 1741595895400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                decoration: const InputDecoration(enabledBorder: Out,\r\n+                decoration: const InputDecoration(enabledBorder: ,\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(borderSide:BorderSide.none ),\r\n                 ),\r\n               ),\r\n"
                },
                {
                    "date": 1741595906195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                decoration: const InputDecoration(enabledBorder: ,\r\n+                decoration: const InputDecoration(enabledBorder: out,\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(borderSide:BorderSide.none ),\r\n                 ),\r\n               ),\r\n"
                },
                {
                    "date": 1741595912944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                decoration: const InputDecoration(enabledBorder: out,\r\n+                decoration: const InputDecoration(enabledBorder: ,\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(borderSide:BorderSide.none ),\r\n                 ),\r\n               ),\r\n"
                },
                {
                    "date": 1741595919207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                decoration: const InputDecoration(enabledBorder: ,\r\n+                decoration: const InputDecoration(enabledBorder: outlinedBorder,\r\n                   hintText: \"Your Name\",\r\n                   border: OutlineInputBorder(borderSide:BorderSide.none ),\r\n                 ),\r\n               ),\r\n"
                },
                {
                    "date": 1741595976572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,12 +37,34 @@\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n-                decoration: const InputDecoration(enabledBorder: outlinedBorder,\r\n-                  hintText: \"Your Name\",\r\n-                  border: OutlineInputBorder(borderSide:BorderSide.none ),\r\n-                ),\r\n+                decoration: InputDecoration(\r\n+  enabledBorder: OutlineInputBorder(\r\n+    borderSide: const BorderSide(color: Colors.blue, width: 2), // Blue border when not focused\r\n+    borderRadius: BorderRadius.circular(10), // Rounded corners\r\n+  ),\r\n+  focusedBorder: OutlineInputBorder(\r\n+    borderSide: const BorderSide(color: Colors.blue, width: 2), // Blue border when focused\r\n+    borderRadius: BorderRadius.circular(10),\r\n+  ),\r\n+  errorBorder: OutlineInputBorder(\r\n+    borderSide: const BorderSide(color: Colors.red, width: 2), // Red border on error\r\n+    borderRadius: BorderRadius.circular(10),\r\n+  ),\r\n+  focusedErrorBorder: OutlineInputBorder(\r\n+    borderSide: const BorderSide(color: Colors.red, width: 2), // Red border when error & focused\r\n+    borderRadius: BorderRadius.circular(10),\r\n+  ),\r\n+  hintText: \"Your Name\",\r\n+  border: OutlineInputBorder(\r\n+    borderSide: const BorderSide(color: Colors.blue, width: 2), // Default border\r\n+    borderRadius: BorderRadius.circular(10),\r\n+  ),\r\n+  filled: true, // Optional: Adds a slight background color\r\n+  fillColor: Colors.white, // Background color\r\n+),\r\n+\r\n               ),\r\n               actions: [\r\n                 ElevatedButton(\r\n                   onPressed: () async {\r\n"
                },
                {
                    "date": 1741595995528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,10 @@\n   static Future<void> show(BuildContext context, WidgetRef ref) async {\r\n     TextEditingController nameController = TextEditingController();\r\n     bool isSaving = false;\r\n \r\n-    showDialog(barrierColor: Colors.black,\r\n+    showDialog(\r\n+      barrierColor: Colors.black12,\r\n       context: context,\r\n       barrierDismissible: false, // Prevents closing the dialog without saving\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n@@ -38,33 +39,40 @@\n               title: const Text(\"Enter Your Name\"),\r\n               content: TextField(\r\n                 controller: nameController,\r\n                 decoration: InputDecoration(\r\n-  enabledBorder: OutlineInputBorder(\r\n-    borderSide: const BorderSide(color: Colors.blue, width: 2), // Blue border when not focused\r\n-    borderRadius: BorderRadius.circular(10), // Rounded corners\r\n-  ),\r\n-  focusedBorder: OutlineInputBorder(\r\n-    borderSide: const BorderSide(color: Colors.blue, width: 2), // Blue border when focused\r\n-    borderRadius: BorderRadius.circular(10),\r\n-  ),\r\n-  errorBorder: OutlineInputBorder(\r\n-    borderSide: const BorderSide(color: Colors.red, width: 2), // Red border on error\r\n-    borderRadius: BorderRadius.circular(10),\r\n-  ),\r\n-  focusedErrorBorder: OutlineInputBorder(\r\n-    borderSide: const BorderSide(color: Colors.red, width: 2), // Red border when error & focused\r\n-    borderRadius: BorderRadius.circular(10),\r\n-  ),\r\n-  hintText: \"Your Name\",\r\n-  border: OutlineInputBorder(\r\n-    borderSide: const BorderSide(color: Colors.blue, width: 2), // Default border\r\n-    borderRadius: BorderRadius.circular(10),\r\n-  ),\r\n-  filled: true, // Optional: Adds a slight background color\r\n-  fillColor: Colors.white, // Background color\r\n-),\r\n-\r\n+                  enabledBorder: OutlineInputBorder(\r\n+                    borderSide: const BorderSide(\r\n+                        color: Colors.blue,\r\n+                        width: 2), // Blue border when not focused\r\n+                    borderRadius: BorderRadius.circular(10), // Rounded corners\r\n+                  ),\r\n+                  focusedBorder: OutlineInputBorder(\r\n+                    borderSide: const BorderSide(\r\n+                        color: Colors.blue,\r\n+                        width: 2), // Blue border when focused\r\n+                    borderRadius: BorderRadius.circular(10),\r\n+                  ),\r\n+                  errorBorder: OutlineInputBorder(\r\n+                    borderSide: const BorderSide(\r\n+                        color: Colors.red, width: 2), // Red border on error\r\n+                    borderRadius: BorderRadius.circular(10),\r\n+                  ),\r\n+                  focusedErrorBorder: OutlineInputBorder(\r\n+                    borderSide: const BorderSide(\r\n+                        color: Colors.red,\r\n+                        width: 2), // Red border when error & focused\r\n+                    borderRadius: BorderRadius.circular(10),\r\n+                  ),\r\n+                  hintText: \"Your Name\",\r\n+                  border: OutlineInputBorder(\r\n+                    borderSide: const BorderSide(\r\n+                        color: Colors.blue, width: 2), // Default border\r\n+                    borderRadius: BorderRadius.circular(10),\r\n+                  ),\r\n+                  filled: true, // Optional: Adds a slight background color\r\n+                  fillColor: Colors.white, // Background color\r\n+                ),\r\n               ),\r\n               actions: [\r\n                 ElevatedButton(\r\n                   onPressed: () async {\r\n"
                },
                {
                    "date": 1741596005394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     TextEditingController nameController = TextEditingController();\r\n     bool isSaving = false;\r\n \r\n     showDialog(\r\n-      barrierColor: Colors.black12,\r\n+      barrierColor: Colors.black,\r\n       context: context,\r\n       barrierDismissible: false, // Prevents closing the dialog without saving\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n"
                },
                {
                    "date": 1741596045596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,17 +28,17 @@\n     TextEditingController nameController = TextEditingController();\r\n     bool isSaving = false;\r\n \r\n     showDialog(\r\n-      barrierColor: Colors.black,\r\n+      barrierColor: Colors.black45,\r\n       context: context,\r\n       barrierDismissible: false, // Prevents closing the dialog without saving\r\n       builder: (BuildContext context) {\r\n         return StatefulBuilder(\r\n           builder: (context, setState) {\r\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n-              content: TextField(\r\n+              content: TextField(s\r\n                 controller: nameController,\r\n                 decoration: InputDecoration(\r\n                   enabledBorder: OutlineInputBorder(\r\n                     borderSide: const BorderSide(\r\n"
                },
                {
                    "date": 1741596052306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         return StatefulBuilder(\r\n           builder: (context, setState) {\r\n             return AlertDialog(\r\n               title: const Text(\"Enter Your Name\"),\r\n-              content: TextField(style: GoogleFonts.,\r\n+              content: TextField(style: GoogleFonts.mo,\r\n                 controller: nameController,\r\n                 decoration: InputDecoration(\r\n                   enabledBorder: OutlineInputBorder(\r\n                     borderSide: const BorderSide(\r\n"
                },
                {
                    "date": 1741596337030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n                   fillColor: Colors.white,\r\n                 ),\r\n               ),\r\n               actions: [\r\n-                ElevatedButton(ele\r\n+                ElevatedButton(e\r\n                   onPressed: () async {\r\n                     String name = nameController.text.trim();\r\n                     if (name.isEmpty) {\r\n                       Fluttertoast.showToast(\r\n"
                }
            ],
            "date": 1741593669569,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:cloud_firestore/cloud_firestore.dart';\r\n\r\nclass AlertLog {\r\n  static Future<void> show(BuildContext context) async {\r\n    TextEditingController nameController = TextEditingController();\r\n\r\n    return showDialog(\r\n      context: context,\r\n      builder: (BuildContext context) {\r\n        return AlertDialog(\r\n          title: Text(\"Enter Your Name\"),\r\n          content: TextField(\r\n            controller: nameController,\r\n            decoration: InputDecoration(\r\n              hintText: \"Your Name\",\r\n              border: OutlineInputBorder(),\r\n            ),\r\n          ),\r\n          actions: [\r\n            TextButton(\r\n              onPressed: () => Navigator.pop(context), // Close dialog\r\n              child: Text(\"Cancel\"),\r\n            ),\r\n            ElevatedButton(\r\n              onPressed: () async {\r\n                String name = nameController.text.trim();\r\n                if (name.isNotEmpty) {\r\n                  await FirebaseFirestore.instance\r\n                      .collection('logged_users')\r\n                      .add({'name': name, 'timestamp': FieldValue.serverTimestamp()});\r\n                }\r\n                Navigator.pop(context); // Close dialog\r\n              },\r\n              child: Text(\"Okay\"),\r\n            ),\r\n          ],\r\n        );\r\n      },\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}