{
    "sourceFile": "lib/Landing/AnimationText.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1737559496991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737559819051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,14 @@\n   final Color color;\r\n   final String fontFamily;\r\n \r\n   const AnimatedText({\r\n-    Key? key,\r\n+    super.key,\r\n     required this.texts,\r\n     this.fontSize = 20,\r\n     this.color = Colors.black,\r\n     this.fontFamily = \"poppins\",\r\n-  }) : super(key: key);\r\n+  });\r\n \r\n   @override\r\n   _AnimatedTextState createState() => _AnimatedTextState();\r\n }\r\n@@ -40,9 +40,10 @@\n   void _startAnimation() {\r\n     _timer = Timer.periodic(const Duration(milliseconds: 100), (timer) {\r\n       setState(() {\r\n         if (_isAdding) {\r\n-          _currentText = widget.texts[_currentIndex].substring(0, _currentText.length + 1);\r\n+          _currentText =\r\n+              widget.texts[_currentIndex].substring(0, _currentText.length + 1);\r\n           if (_currentText.length == widget.texts[_currentIndex].length) {\r\n             _isAdding = false;\r\n             _timer.cancel();\r\n             Future.delayed(const Duration(seconds: 1), () {\r\n@@ -74,8 +75,10 @@\n   }\r\n }\r\n \r\n class MyHomePage extends StatelessWidget {\r\n+  const MyHomePage({super.key});\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     double screenWidth = MediaQuery.of(context).size.width;\r\n \r\n@@ -94,9 +97,9 @@\n                 decorationThickness: 5,\r\n               ),\r\n             ),\r\n             AnimatedText(\r\n-              texts: [\r\n+              texts: const [\r\n                 \"Flutter Developer\",\r\n                 \"Node Developer\",\r\n                 \"JavaScript Developer\",\r\n               ],\r\n@@ -109,10 +112,4 @@\n       ),\r\n     );\r\n   }\r\n }\r\n-\r\n-void main() {\r\n-  runApp(MaterialApp(\r\n-    home: MyHomePage(),\r\n-  ));\r\n-}\r\n"
                },
                {
                    "date": 1737559845633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           children: [\r\n             Text(\r\n               \"Hi, I'm Vishnu\",\r\n-              style: TextStyle(\r\n+              style: TextStyle(c\r\n                 fontSize: screenWidth > 800 ? 32 : 20,\r\n                 fontWeight: FontWeight.bold,\r\n                 fontFamily: \"poppins\",\r\n                 decorationThickness: 5,\r\n"
                },
                {
                    "date": 1737559852013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           children: [\r\n             Text(\r\n               \"Hi, I'm Vishnu\",\r\n-              style: TextStyle(c\r\n+              style: TextStyle(colors.white\r\n                 fontSize: screenWidth > 800 ? 32 : 20,\r\n                 fontWeight: FontWeight.bold,\r\n                 fontFamily: \"poppins\",\r\n                 decorationThickness: 5,\r\n"
                },
                {
                    "date": 1737559867106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           children: [\r\n             Text(\r\n               \"Hi, I'm Vishnu\",\r\n-              style: TextStyle(colors.white\r\n+              style: TextStyle(colors.white,\r\n                 fontSize: screenWidth > 800 ? 32 : 20,\r\n                 fontWeight: FontWeight.bold,\r\n                 fontFamily: \"poppins\",\r\n                 decorationThickness: 5,\r\n"
                },
                {
                    "date": 1737559875076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           children: [\r\n             Text(\r\n               \"Hi, I'm Vishnu\",\r\n-              style: TextStyle(colors.white,\r\n+              style: TextStyle(C\r\n                 fontSize: screenWidth > 800 ? 32 : 20,\r\n                 fontWeight: FontWeight.bold,\r\n                 fontFamily: \"poppins\",\r\n                 decorationThickness: 5,\r\n"
                },
                {
                    "date": 1737560065057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,25 +89,17 @@\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           children: [\r\n             Text(\r\n               \"Hi, I'm Vishnu\",\r\n-              style: TextStyle(C\r\n+              style: TextStyle(\r\n+                color: Colors.white,\r\n                 fontSize: screenWidth > 800 ? 32 : 20,\r\n                 fontWeight: FontWeight.bold,\r\n                 fontFamily: \"poppins\",\r\n                 decorationThickness: 5,\r\n               ),\r\n             ),\r\n-            AnimatedText(\r\n-              texts: const [\r\n-                \"Flutter Developer\",\r\n-                \"Node Developer\",\r\n-                \"JavaScript Developer\",\r\n-              ],\r\n-              fontSize: screenWidth > 800 ? 32 : 20,\r\n-              color: Colors.blue,\r\n-              fontFamily: \"poppins\",\r\n-            ),\r\n+            \r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1737560071072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,34 +74,4 @@\n     );\r\n   }\r\n }\r\n \r\n-class MyHomePage extends StatelessWidget {\r\n-  const MyHomePage({super.key});\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    double screenWidth = MediaQuery.of(context).size.width;\r\n-\r\n-    return Scaffold(\r\n-      body: Center(\r\n-        child: Column(\r\n-          crossAxisAlignment: CrossAxisAlignment.start,\r\n-          mainAxisAlignment: MainAxisAlignment.center,\r\n-          children: [\r\n-            Text(\r\n-              \"Hi, I'm Vishnu\",\r\n-              style: TextStyle(\r\n-                color: Colors.white,\r\n-                fontSize: screenWidth > 800 ? 32 : 20,\r\n-                fontWeight: FontWeight.bold,\r\n-                fontFamily: \"poppins\",\r\n-                decorationThickness: 5,\r\n-              ),\r\n-            ),\r\n-            \r\n-          ],\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1737560438335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,15 +62,17 @@\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Text(\r\n-      _currentText,\r\n-      style: TextStyle(\r\n-        fontSize: widget.fontSize,\r\n-        color: widget.color,\r\n-        fontFamily: widget.fontFamily,\r\n-        fontWeight: FontWeight.bold,\r\n+    return Expanded(\r\n+      child: Text(\r\n+        _currentText,\r\n+        style: TextStyle(\r\n+          fontSize: widget.fontSize,\r\n+          color: widget.color,\r\n+          fontFamily: widget.fontFamily,\r\n+          fontWeight: FontWeight.bold,\r\n+        ),\r\n       ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1737560451562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,18 +62,15 @@\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Expanded(\r\n-      child: Text(\r\n-        _currentText,\r\n-        style: TextStyle(\r\n-          fontSize: widget.fontSize,\r\n-          color: widget.color,\r\n-          fontFamily: widget.fontFamily,\r\n-          fontWeight: FontWeight.bold,\r\n-        ),\r\n+    return Text(\r\n+      _currentText,\r\n+      style: TextStyle(\r\n+        fontSize: widget.fontSize,\r\n+        color: widget.color,\r\n+        fontFamily: widget.fontFamily,\r\n+        fontWeight: FontWeight.bold,\r\n       ),\r\n     );\r\n   }\r\n }\r\n-\r\n"
                },
                {
                    "date": 1737561075694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Text(\r\n       _currentText,\r\n-      style: TextStyle(\r\n+      style: Goog(\r\n         fontSize: widget.fontSize,\r\n         color: widget.color,\r\n         fontFamily: widget.fontFamily,\r\n         fontWeight: FontWeight.bold,\r\n"
                },
                {
                    "date": 1737561087576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import 'package:flutter/material.dart';\r\n import 'dart:async';\r\n \r\n+import 'package:google_fonts/google_fonts.dart';\r\n+\r\n class AnimatedText extends StatefulWidget {\r\n   final List<String> texts;\r\n   final double fontSize;\r\n   final Color color;\r\n@@ -64,9 +66,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Text(\r\n       _currentText,\r\n-      style: Goog(\r\n+      style: GoogleFonts.poppins(\r\n         fontSize: widget.fontSize,\r\n         color: widget.color,\r\n         fontFamily: widget.fontFamily,\r\n         fontWeight: FontWeight.bold,\r\n"
                },
                {
                    "date": 1737561096984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,8 @@\n       _currentText,\r\n       style: GoogleFonts.poppins(\r\n         fontSize: widget.fontSize,\r\n         color: widget.color,\r\n-        fontFamily: widget.fontFamily,\r\n         fontWeight: FontWeight.bold,\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1737561242810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,8 @@\n     super.key,\r\n     required this.texts,\r\n     this.fontSize = 20,\r\n     this.color = Colors.black,\r\n-    this.fontFamily = \"poppins\",\r\n   });\r\n \r\n   @override\r\n   _AnimatedTextState createState() => _AnimatedTextState();\r\n"
                },
                {
                    "date": 1737561265666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n class AnimatedText extends StatefulWidget {\r\n   final List<String> texts;\r\n   final double fontSize;\r\n   final Color color;\r\n-  final String fontFamily;\r\n \r\n   const AnimatedText({\r\n     super.key,\r\n     required this.texts,\r\n@@ -68,9 +67,8 @@\n       _currentText,\r\n       style: GoogleFonts.poppins(\r\n         fontSize: widget.fontSize,\r\n         color: widget.color,\r\n-        fontWeight: FontWeight.bold,\r\n       ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1737561272104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Text(\r\n       _currentText,\r\n-      style: GoogleFonts.poppins(\r\n+      style: GoogleFonts.montserrat(\r\n         fontSize: widget.fontSize,\r\n         color: widget.color,\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1737565411865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,74 +1,90 @@\n import 'package:flutter/material.dart';\r\n-import 'dart:async';\r\n-\r\n import 'package:google_fonts/google_fonts.dart';\r\n+import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n \r\n-class AnimatedText extends StatefulWidget {\r\n-  final List<String> texts;\r\n-  final double fontSize;\r\n-  final Color color;\r\n+final animatedTextProvider = StateNotifierProvider<AnimatedTextNotifier, String>(\r\n+  (ref) => AnimatedTextNotifier([\"Flutter Developer\", \"Mobile Expert\", \"Tech Enthusiast\"]),\r\n+);\r\n \r\n-  const AnimatedText({\r\n-    super.key,\r\n-    required this.texts,\r\n-    this.fontSize = 20,\r\n-    this.color = Colors.black,\r\n-  });\r\n+class AnimatedTextNotifier extends StateNotifier<String> {\r\n+  AnimatedTextNotifier(this.texts) : super(\"\") {\r\n+    _startAnimation();\r\n+  }\r\n \r\n-  @override\r\n-  _AnimatedTextState createState() => _AnimatedTextState();\r\n-}\r\n-\r\n-class _AnimatedTextState extends State<AnimatedText> {\r\n-  String _currentText = \"\";\r\n+  final List<String> texts;\r\n   int _currentIndex = 0;\r\n   bool _isAdding = true;\r\n-  late Timer _timer;\r\n+  String _currentText = \"\";\r\n \r\n-  @override\r\n-  void initState() {\r\n-    super.initState();\r\n-    _startAnimation();\r\n+  void _startAnimation() {\r\n+    Future.doWhile(() async {\r\n+      await Future.delayed(const Duration(milliseconds: 100));\r\n+      if (_isAdding) {\r\n+        _currentText = texts[_currentIndex].substring(0, _currentText.length + 1);\r\n+        if (_currentText.length == texts[_currentIndex].length) {\r\n+          _isAdding = false;\r\n+          await Future.delayed(const Duration(seconds: 1));\r\n+        }\r\n+      } else {\r\n+        _currentText = _currentText.substring(0, _currentText.length - 1);\r\n+        if (_currentText.isEmpty) {\r\n+          _isAdding = true;\r\n+          _currentIndex = (_currentIndex + 1) % texts.length;\r\n+        }\r\n+      }\r\n+      state = _currentText;\r\n+      return true;\r\n+    });\r\n   }\r\n+}\r\n \r\n+class AnimatedTextPage extends ConsumerWidget {\r\n+  const AnimatedTextPage({super.key});\r\n+\r\n   @override\r\n-  void dispose() {\r\n-    _timer.cancel();\r\n-    super.dispose();\r\n-  }\r\n+  Widget build(BuildContext context, WidgetRef ref) {\r\n+    final animatedText = ref.watch(animatedTextProvider);\r\n \r\n-  void _startAnimation() {\r\n-    _timer = Timer.periodic(const Duration(milliseconds: 100), (timer) {\r\n-      setState(() {\r\n-        if (_isAdding) {\r\n-          _currentText =\r\n-              widget.texts[_currentIndex].substring(0, _currentText.length + 1);\r\n-          if (_currentText.length == widget.texts[_currentIndex].length) {\r\n-            _isAdding = false;\r\n-            _timer.cancel();\r\n-            Future.delayed(const Duration(seconds: 1), () {\r\n-              _startAnimation();\r\n-            });\r\n-          }\r\n-        } else {\r\n-          _currentText = _currentText.substring(0, _currentText.length - 1);\r\n-          if (_currentText.isEmpty) {\r\n-            _isAdding = true;\r\n-            _currentIndex = (_currentIndex + 1) % widget.texts.length;\r\n-          }\r\n-        }\r\n-      });\r\n-    });\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        title: const Text(\"Animated Text with Riverpod\"),\r\n+      ),\r\n+      body: Center(\r\n+        child: AnimatedSwitcher(\r\n+          duration: const Duration(milliseconds: 500),\r\n+          transitionBuilder: (child, animation) {\r\n+            return RotationTransition(\r\n+              turns: animation,\r\n+              child: child,\r\n+            );\r\n+          },\r\n+          child: Text(\r\n+            animatedText,\r\n+            key: ValueKey(animatedText),\r\n+            style: GoogleFonts.montserrat(\r\n+              fontSize: 30,\r\n+              color: Colors.blue,\r\n+              fontWeight: FontWeight.bold,\r\n+            ),\r\n+          ),\r\n+        ),\r\n+      ),\r\n+    );\r\n   }\r\n+}\r\n \r\n+void main() {\r\n+  runApp(const ProviderScope(child: AnimatedTextApp()));\r\n+}\r\n+\r\n+class AnimatedTextApp extends StatelessWidget {\r\n+  const AnimatedTextApp({super.key});\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Text(\r\n-      _currentText,\r\n-      style: GoogleFonts.montserrat(\r\n-        fontSize: widget.fontSize,\r\n-        color: widget.color,\r\n-      ),\r\n+    return MaterialApp(\r\n+      debugShowCheckedModeBanner: false,\r\n+      home: const AnimatedTextPage(),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1737565492435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,13 @@\n import 'package:google_fonts/google_fonts.dart';\r\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n \r\n final animatedTextProvider = StateNotifierProvider<AnimatedTextNotifier, String>(\r\n-  (ref) => AnimatedTextNotifier([\"Flutter Developer\", \"Mobile Expert\", \"Tech Enthusiast\"]),\r\n+  (ref) => AnimatedTextNotifier([\"Flutter Developer\",\r\n+                                          \"Node.js Developer\",\r\n+                                          \"Mobile App Developer\",\r\n+                                          \"Web Developer\",\r\n+                                          \"Cross-Platform App Builder\",]),\r\n );\r\n \r\n class AnimatedTextNotifier extends StateNotifier<String> {\r\n   AnimatedTextNotifier(this.texts) : super(\"\") {\r\n@@ -72,19 +76,5 @@\n     );\r\n   }\r\n }\r\n \r\n-void main() {\r\n-  runApp(const ProviderScope(child: AnimatedTextApp()));\r\n-}\r\n \r\n-class AnimatedTextApp extends StatelessWidget {\r\n-  const AnimatedTextApp({super.key});\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return MaterialApp(\r\n-      debugShowCheckedModeBanner: false,\r\n-      home: const AnimatedTextPage(),\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1737565728417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,26 +54,30 @@\n         title: const Text(\"Animated Text with Riverpod\"),\r\n       ),\r\n       body: Center(\r\n         child: AnimatedSwitcher(\r\n-          duration: const Duration(milliseconds: 500),\r\n-          transitionBuilder: (child, animation) {\r\n-            return RotationTransition(\r\n-              turns: animation,\r\n-              child: child,\r\n-            );\r\n-          },\r\n-          child: Text(\r\n-            animatedText,\r\n-            key: ValueKey(animatedText),\r\n-            style: GoogleFonts.montserrat(\r\n-              fontSize: 30,\r\n-              color: Colors.blue,\r\n-              fontWeight: FontWeight.bold,\r\n-            ),\r\n-          ),\r\n-        ),\r\n+  duration: const Duration(milliseconds: 500),\r\n+  transitionBuilder: (child, animation) {\r\n+    return RotationTransition(\r\n+      turns: animation,\r\n+      child: child,\r\n+    );\r\n+  },\r\n+  child: ConstrainedBox(\r\n+    constraints: const BoxConstraints(minWidth: 1, minHeight: 1),\r\n+    child: Text(\r\n+      animatedText,\r\n+      key: ValueKey(animatedText),\r\n+      style: GoogleFonts.montserrat(\r\n+        fontSize: 30,\r\n+        color: Colors.blue,\r\n+        fontWeight: FontWeight.bold,\r\n       ),\r\n+    ),\r\n+  ),\r\n+)\r\n+\r\n+      ),\r\n     );\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1737565745171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,37 +48,28 @@\n   @override\r\n   Widget build(BuildContext context, WidgetRef ref) {\r\n     final animatedText = ref.watch(animatedTextProvider);\r\n \r\n-    return Scaffold(\r\n-      appBar: AppBar(\r\n-        title: const Text(\"Animated Text with Riverpod\"),\r\n+    return  AnimatedSwitcher(\r\n+          duration: const Duration(milliseconds: 500),\r\n+          transitionBuilder: (child, animation) {\r\n+            return RotationTransition(\r\n+              turns: animation,\r\n+              child: child,\r\n+            );\r\n+          },\r\n+          child: Text(\r\n+            animatedText,\r\n+            key: ValueKey(animatedText),\r\n+            style: GoogleFonts.montserrat(\r\n+              fontSize: 30,\r\n+              color: Colors.blue,\r\n+              fontWeight: FontWeight.bold,\r\n+            ),\r\n+          ),\r\n+        ),\r\n       ),\r\n-      body: Center(\r\n-        child: AnimatedSwitcher(\r\n-  duration: const Duration(milliseconds: 500),\r\n-  transitionBuilder: (child, animation) {\r\n-    return RotationTransition(\r\n-      turns: animation,\r\n-      child: child,\r\n     );\r\n-  },\r\n-  child: ConstrainedBox(\r\n-    constraints: const BoxConstraints(minWidth: 1, minHeight: 1),\r\n-    child: Text(\r\n-      animatedText,\r\n-      key: ValueKey(animatedText),\r\n-      style: GoogleFonts.montserrat(\r\n-        fontSize: 30,\r\n-        color: Colors.blue,\r\n-        fontWeight: FontWeight.bold,\r\n-      ),\r\n-    ),\r\n-  ),\r\n-)\r\n-\r\n-      ),\r\n-    );\r\n   }\r\n }\r\n \r\n \r\n"
                },
                {
                    "date": 1737565786335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,9 @@\n import 'package:google_fonts/google_fonts.dart';\r\n import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n \r\n final animatedTextProvider = StateNotifierProvider<AnimatedTextNotifier, String>(\r\n-  (ref) => AnimatedTextNotifier([\"Flutter Developer\",\r\n-                                          \"Node.js Developer\",\r\n-                                          \"Mobile App Developer\",\r\n-                                          \"Web Developer\",\r\n-                                          \"Cross-Platform App Builder\",]),\r\n+  (ref) => AnimatedTextNotifier([\"Flutter Developer\", \"Mobile Expert\", \"Tech Enthusiast\"]),\r\n );\r\n \r\n class AnimatedTextNotifier extends StateNotifier<String> {\r\n   AnimatedTextNotifier(this.texts) : super(\"\") {\r\n@@ -48,9 +44,14 @@\n   @override\r\n   Widget build(BuildContext context, WidgetRef ref) {\r\n     final animatedText = ref.watch(animatedTextProvider);\r\n \r\n-    return  AnimatedSwitcher(\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        title: const Text(\"Animated Text with Riverpod\"),\r\n+      ),\r\n+      body: Center(\r\n+        child: AnimatedSwitcher(\r\n           duration: const Duration(milliseconds: 500),\r\n           transitionBuilder: (child, animation) {\r\n             return RotationTransition(\r\n               turns: animation,\r\n"
                },
                {
                    "date": 1737566274921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,76 +1,74 @@\n import 'package:flutter/material.dart';\r\n+import 'dart:async';\r\n+\r\n import 'package:google_fonts/google_fonts.dart';\r\n-import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n \r\n-final animatedTextProvider = StateNotifierProvider<AnimatedTextNotifier, String>(\r\n-  (ref) => AnimatedTextNotifier([\"Flutter Developer\", \"Mobile Expert\", \"Tech Enthusiast\"]),\r\n-);\r\n+class AnimatedText extends StatefulWidget {\r\n+  final List<String> texts;\r\n+  final double fontSize;\r\n+  final Color color;\r\n \r\n-class AnimatedTextNotifier extends StateNotifier<String> {\r\n-  AnimatedTextNotifier(this.texts) : super(\"\") {\r\n-    _startAnimation();\r\n-  }\r\n+  const AnimatedText({\r\n+    super.key,\r\n+    required this.texts,\r\n+    this.fontSize = 20,\r\n+    this.color = Colors.black,\r\n+  });\r\n \r\n-  final List<String> texts;\r\n+  @override\r\n+  _AnimatedTextState createState() => _AnimatedTextState();\r\n+}\r\n+\r\n+class _AnimatedTextState extends State<AnimatedText> {\r\n+  String _currentText = \"\";\r\n   int _currentIndex = 0;\r\n   bool _isAdding = true;\r\n-  String _currentText = \"\";\r\n+  late Timer _timer;\r\n \r\n+  @override\r\n+  void initState() {\r\n+    super.initState();\r\n+    _startAnimation();\r\n+  }\r\n+\r\n+  @override\r\n+  void dispose() {\r\n+    _timer.cancel();\r\n+    super.dispose();\r\n+  }\r\n+\r\n   void _startAnimation() {\r\n-    Future.doWhile(() async {\r\n-      await Future.delayed(const Duration(milliseconds: 100));\r\n-      if (_isAdding) {\r\n-        _currentText = texts[_currentIndex].substring(0, _currentText.length + 1);\r\n-        if (_currentText.length == texts[_currentIndex].length) {\r\n-          _isAdding = false;\r\n-          await Future.delayed(const Duration(seconds: 1));\r\n+    _timer = Timer.periodic(const Duration(milliseconds: 100), (timer) {\r\n+      setState(() {\r\n+        if (_isAdding) {\r\n+          _currentText =\r\n+              widget.texts[_currentIndex].substring(0, _currentText.length + 1);\r\n+          if (_currentText.length == widget.texts[_currentIndex].length) {\r\n+            _isAdding = false;\r\n+            _timer.cancel();\r\n+            Future.delayed(const Duration(seconds: 1), () {\r\n+              _startAnimation();\r\n+            });\r\n+          }\r\n+        } else {\r\n+          _currentText = _currentText.substring(0, _currentText.length - 1);\r\n+          if (_currentText.isEmpty) {\r\n+            _isAdding = true;\r\n+            _currentIndex = (_currentIndex + 1) % widget.texts.length;\r\n+          }\r\n         }\r\n-      } else {\r\n-        _currentText = _currentText.substring(0, _currentText.length - 1);\r\n-        if (_currentText.isEmpty) {\r\n-          _isAdding = true;\r\n-          _currentIndex = (_currentIndex + 1) % texts.length;\r\n-        }\r\n-      }\r\n-      state = _currentText;\r\n-      return true;\r\n+      });\r\n     });\r\n   }\r\n-}\r\n \r\n-class AnimatedTextPage extends ConsumerWidget {\r\n-  const AnimatedTextPage({super.key});\r\n-\r\n   @override\r\n-  Widget build(BuildContext context, WidgetRef ref) {\r\n-    final animatedText = ref.watch(animatedTextProvider);\r\n-\r\n-    return Scaffold(\r\n-      appBar: AppBar(\r\n-        title: const Text(\"Animated Text with Riverpod\"),\r\n+  Widget build(BuildContext context) {\r\n+    return Text(\r\n+      _currentText,\r\n+      style: GoogleFonts.montserrat(\r\n+        fontSize: widget.fontSize,\r\n+        color: widget.color,fontWeight: \r\n       ),\r\n-      body: Center(\r\n-        child: AnimatedSwitcher(\r\n-          duration: const Duration(milliseconds: 500),\r\n-          transitionBuilder: (child, animation) {\r\n-            return RotationTransition(\r\n-              turns: animation,\r\n-              child: child,\r\n-            );\r\n-          },\r\n-          child: Text(\r\n-            animatedText,\r\n-            key: ValueKey(animatedText),\r\n-            style: GoogleFonts.montserrat(\r\n-              fontSize: 30,\r\n-              color: Colors.blue,\r\n-              fontWeight: FontWeight.bold,\r\n-            ),\r\n-          ),\r\n-        ),\r\n-      ),\r\n     );\r\n   }\r\n }\r\n-\r\n-\r\n"
                },
                {
                    "date": 1737566281549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     return Text(\r\n       _currentText,\r\n       style: GoogleFonts.montserrat(\r\n         fontSize: widget.fontSize,\r\n-        color: widget.color,fontWeight: \r\n+        color: widget.color,fontWeight: Font\r\n       ),\r\n     );\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1737559496991,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'dart:async';\r\n\r\nclass AnimatedText extends StatefulWidget {\r\n  final List<String> texts;\r\n  final double fontSize;\r\n  final Color color;\r\n  final String fontFamily;\r\n\r\n  const AnimatedText({\r\n    Key? key,\r\n    required this.texts,\r\n    this.fontSize = 20,\r\n    this.color = Colors.black,\r\n    this.fontFamily = \"poppins\",\r\n  }) : super(key: key);\r\n\r\n  @override\r\n  _AnimatedTextState createState() => _AnimatedTextState();\r\n}\r\n\r\nclass _AnimatedTextState extends State<AnimatedText> {\r\n  String _currentText = \"\";\r\n  int _currentIndex = 0;\r\n  bool _isAdding = true;\r\n  late Timer _timer;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    _startAnimation();\r\n  }\r\n\r\n  @override\r\n  void dispose() {\r\n    _timer.cancel();\r\n    super.dispose();\r\n  }\r\n\r\n  void _startAnimation() {\r\n    _timer = Timer.periodic(const Duration(milliseconds: 100), (timer) {\r\n      setState(() {\r\n        if (_isAdding) {\r\n          _currentText = widget.texts[_currentIndex].substring(0, _currentText.length + 1);\r\n          if (_currentText.length == widget.texts[_currentIndex].length) {\r\n            _isAdding = false;\r\n            _timer.cancel();\r\n            Future.delayed(const Duration(seconds: 1), () {\r\n              _startAnimation();\r\n            });\r\n          }\r\n        } else {\r\n          _currentText = _currentText.substring(0, _currentText.length - 1);\r\n          if (_currentText.isEmpty) {\r\n            _isAdding = true;\r\n            _currentIndex = (_currentIndex + 1) % widget.texts.length;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Text(\r\n      _currentText,\r\n      style: TextStyle(\r\n        fontSize: widget.fontSize,\r\n        color: widget.color,\r\n        fontFamily: widget.fontFamily,\r\n        fontWeight: FontWeight.bold,\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass MyHomePage extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    double screenWidth = MediaQuery.of(context).size.width;\r\n\r\n    return Scaffold(\r\n      body: Center(\r\n        child: Column(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          mainAxisAlignment: MainAxisAlignment.center,\r\n          children: [\r\n            Text(\r\n              \"Hi, I'm Vishnu\",\r\n              style: TextStyle(\r\n                fontSize: screenWidth > 800 ? 32 : 20,\r\n                fontWeight: FontWeight.bold,\r\n                fontFamily: \"poppins\",\r\n                decorationThickness: 5,\r\n              ),\r\n            ),\r\n            AnimatedText(\r\n              texts: [\r\n                \"Flutter Developer\",\r\n                \"Node Developer\",\r\n                \"JavaScript Developer\",\r\n              ],\r\n              fontSize: screenWidth > 800 ? 32 : 20,\r\n              color: Colors.blue,\r\n              fontFamily: \"poppins\",\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nvoid main() {\r\n  runApp(MaterialApp(\r\n    home: MyHomePage(),\r\n  ));\r\n}\r\n"
        }
    ]
}